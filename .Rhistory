install.packages("ggplot2")
randomDates <- function(N, st="2012/01/01", et="2012/12/31") {
st <- as.POSIXct(as.Date(st))
et <- as.POSIXct(as.Date(et))
dt <- as.numeric(difftime(et,st,unit="sec"))
ev <- sort(runif(N, 0, dt))
rt <- st + ev
}
x_dates <- randomDates(10000)
x <- rnorm(10000)
y <- rnorm(10000)
z <- rnorm(10000)
zf <- z < 0
zf <- factor(zf, labels=c("Factor True", "Factor False"))
df <- data.frame(x, x_dates, y, z, zf)
g <- ggplot(df, aes(x, y))
ggplot(df, aes(x, y)) # ERROR: No layers in plot; no plot done yet!!  Doesn't know how to draw it!
library(ggplot2)
ggplot(df, aes(x, y)) # ERROR: No layers in plot; no plot done yet!!  Doesn't know how to draw it!
g <- ggplot(df, aes(x, y))
summary(g)
p <- g + geom_point() # Which is adding the layer...
summary(p)
p ## Now that's working - the geom_point function specifies how to draw it!
q <- g + geom_point() + geom_smooth()
q
g + geom_point() + geom_smooth() ## equivalent to printing 'q'
g + geom_point() + geom_smooth(method="lm") ## same as before but different 'smooth'
g + geom_point() + facet_grid(. ~ zf) + geom_smooth(method="lm")
g + geom_point() + facet_grid(. ~ zf) + geom_smooth(method="lm") + xlab("Martin's Title") + theme_bw()
g + geom_point(color = "steelblue", size=4, alpha=1/2) +
facet_grid(. ~ zf) +
geom_smooth(method="lm") +
xlab("Martin's Title") +
theme_bw()
g + geom_point(aes(color=zf), size=4, alpha=1/2) +
facet_grid(. ~ zf) +
geom_smooth(size=2, method="lm") +
xlab("Martin's Title") +
labs(title="Martin's BIG Title...") +
theme_bw(base_family="Times")
g_dates <- ggplot(df, aes(x_dates, y))
g_dates + geom_line()
g_dates + geom_line(aes(color=zf), size=1, alpha=1/2)
g_dates + geom_line(aes(color=zf), size=1, alpha=1/2) +
facet_grid(. ~ zf) +
geom_smooth(size=1) +
xlab("Martin's Title") +
labs(title="Martin's BIG Title...") +
theme_bw(base_family="Avenir")
g_dates2 <- ggplot(df, aes(x_dates, y, z)) ## ERROR: 'z' is omitted; how to draw 2 lines?
g_dates2 + geom_line()
g_dates3 <- ggplot(df, aes(x_dates)) ## Working!!
g_dates3 +
geom_line(aes(y = y), size=1, alpha=1/2) +
geom_line(aes(y = z), size=1.5, alpha=1/2)
g + geom_point(aes(color=zf), size=4, alpha=1/2) +
facet_grid(. ~ zf) +
geom_smooth(size=2, method="lm") +
xlab("Martin's Title") +
labs(title="Martin's BIG Title...") +
theme_bw(base_family="Times")
library(ggplot2)
randomDates <- function(N, st="2012/01/01", et="2012/12/31") {
st <- as.POSIXct(as.Date(st))
et <- as.POSIXct(as.Date(et))
dt <- as.numeric(difftime(et,st,unit="sec"))
ev <- sort(runif(N, 0, dt))
rt <- st + ev
}
x_dates <- randomDates(1000)
x <- rnorm(1000)
y <- rnorm(1000)
z <- rnorm(1000)
zf <- z < 0
zf <- factor(zf, labels=c("Factor True", "Factor False"))
df <- data.frame(x, x_dates, y, z, zf)
x_dates2 <- randomDates(1000, "2013/01/01", "2013/12/31")
x2 <- rnorm(1000)
y2 <- rnorm(1000)
z2 <- rnorm(1000)
zf2 <- z2 < 0
zf2 <- factor(zf2, labels=c("Factor True", "Factor False"))
df2 <- data.frame(x2, x_dates2, y2, z2, zf2)
names(df2) <- names(df)
df <- rbind(df, df2)
ggplot(df, aes(x, y)) + geom_point()
ggplot(df, aes(x_dates, y)) +
geom_line(aes(color=zf), size=1, alpha=1/2) +
facet_grid(. ~ zf) +
geom_smooth(size=1) +
xlab("Dates...") +
labs(title="Test GGPlot, Dates and Correlation...") +
theme_bw(base_family="Avenir")
ggplot(df, aes(x_dates)) +
facet_grid(. ~ zf) +
geom_line(aes(y = y), size=1, alpha=1/2) +
geom_line(aes(y = z), size=1.5, alpha=1/2) +
theme_bw(base_family="Avenir")
library(lubridate)
df$year <- factor(year(df$x_dates)) # Turning the year of each observation into a factor
df$month <- factor(month(df$x_dates, label=TRUE))
ggplot(df, aes(month)) +
facet_grid(year ~ zf) +
#facet_wrap(year + zf ~ ., nrow=2, ncol=2) + # ERROR
#facet_wrap(~ year + zf, nrow=2, ncol=2) +
#facet_wrap(year ~ zf, nrow=2, ncol=2) +
#facet_wrap(~ zf, nrow=2, ncol=2) +
geom_line(aes(y = y), size=1, alpha=1/2) +
geom_line(aes(y = z), size=1.5, alpha=1/2) +
theme_bw(base_family="Avenir")
library(dplyr)
library(tidyr)
library(ggplot2)
id <- c("A", "B","A", "B","A", "B")
year <- c(2000, 2000, 2001, 2001, 2002, 2002)
amt <- c(4, 4, 2, 3, 3, 1)
df <- data.frame(id, year, amt)
names(df) <- c("ID", "YEAR", "AMOUNT")
data <- tbl_df(df)
data
data %>%
group_by(ID) %>%
arrange(YEAR) %>%
mutate(YtY_VARIANCE=AMOUNT-lag(AMOUNT),
YtY_VARIANCE=replace(YtY_VARIANCE, which(is.na(YtY_VARIANCE)), 0),
Y_VARIANCE=AMOUNT-first(AMOUNT))
setwd("~/Documents/github-repo/RepData_PeerAssessment2")
